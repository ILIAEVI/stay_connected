services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stay_connected_django
    volumes:
      - static_files:/home/djangoapp/src/static
      - media_files:/home/djangoapp/src/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres_db
      - redis
      - celery_worker
      - celery_beat
    command: sh -c "sleep 15 && python3 manage.py makemigrations && python3 manage.py migrate && gunicorn stay_connected.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  postgres_db:
    container_name: stay_connected_db
    image: postgres:17.2-bullseye
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [ "CMD", "pg_isready", "-q", "-d", "stay_connected_db", "-U", "admin" ]
      timeout: 60s
      interval: 10s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

#  celery_worker:
#    container_name: stay_connected_celery_worker
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - postgres_db
#      - redis
#    volumes:
#      - .:/home/djangoapp/src
#    command: celery -A stay_connected worker --loglevel=info
#
#  celery_beat:
#    container_name: stay_connected_celery_beat
#    build:
#      context: .
#      dockerfile: Dockerfile
#    volumes:
#      - .:/home/djangoapp/src
#    depends_on:
#      - redis
#      - postgres_db
#    command: celery -A stay_connected beat --loglevel=info


volumes:
  postgres_data:
  static_files:
  media_files:

